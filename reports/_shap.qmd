{{< include _setup.qmd >}}

# SHAP Values

::: {.panel-tabset}

SHAP values are a way to explain the importance of specific features within the model.
They represent both the direction and magnitude of a feature's impact on the prediciton.

## SHAP Summary

```{r, eval=shap_exists}
shap_df_filtered <- shap_df %>%
  left_join(
    assessment_card %>%
      mutate(meta_triad = ccao::town_get_triad(meta_township_code)) %>%
      select(meta_year, meta_pin, meta_card_num, meta_triad),
    by = c("meta_year", "meta_pin", "meta_card_num")
  ) %>%
  filter(meta_triad == run_triad_code) %>%
  arrange(meta_pin, meta_card_num)
```

```{r, eval=shap_exists}
shap_df_filtered %>%
  select(
    where(~ !all(is.na(.x))) & !starts_with("pred") & where(is.numeric)
  ) %>%
  skim() %>%
  rename_with(~ str_replace_all(.x, "skim_|numeric.", "")) %>%
  select(-c(type, n_missing, complete_rate, p25, p75)) %>%
  rename(histogram = hist, median = p50, min = p0, max = p100) %>%
  mutate(
    variable = str_replace_all(variable, "_", " "),
    across(where(is.numeric), ~ round(.x, 1)),
    `mean direction` = case_when(
      mean < 0 ~ "-", mean > 0 ~ "+", TRUE ~ ""
    ),
    `median direction` = case_when(
      median < 0 ~ "-", median > 0 ~ "+", TRUE ~ ""
    ),
    mean = abs(mean),
    median = abs(median)
  ) %>%
  relocate(`mean direction`, .before = mean) %>%
  relocate(`median direction`, .before = median) %>%
  datatable(
    rownames = FALSE,
    height = "500px",
    options = list(
      columnDefs = list(
        list(className = "dt-center", targets = c(1:7))
      )
    )
  )
```

```{r, eval=shap_exists}
shap_predictors <- names(shap_df_filtered)
shap_predictors <- shap_predictors[!shap_predictors %in% c(
  "meta_year",
  "meta_pin",
  "meta_card_num",
  "pred_card_shap_baseline_fmv",
  "township_code",
  "meta_triad"
)]

assessment_card_filtered <- assessment_card %>%
  mutate(meta_triad = ccao::town_get_triad(meta_township_code)) %>%
  filter(meta_triad == run_triad_code) %>%
  arrange(meta_pin, meta_card_num)

create_shapviz <- function(shap_df, assessment_df, idx) {
  shap_predictors <- names(shap_df)
  shap_predictors <- shap_predictors[!shap_predictors %in% c(
    "meta_year",
    "meta_pin",
    "meta_card_num",
    "pred_card_shap_baseline_fmv",
    "township_code",
    "meta_triad"
  )]
  shapviz::shapviz(
    object = shap_df %>%
      select(all_of(shap_predictors)) %>%
      slice(idx) %>%
      as.matrix(),
    X = assessment_df %>%
      select(all_of(shap_predictors)) %>%
      slice(idx),
    baseline = shap_df$pred_card_shap_baseline_fmv[1]
  )
}
```

```{r, results='asis', eval=shap_exists}
cat("## Riverside Beeswarm")
```

```{r, eval=shap_exists}
shap_riverside_idx <- which(
  assessment_card_filtered$meta_township_code == ccao::town_convert("Riverside")
)
create_shapviz(shap_df_filtered, assessment_card_filtered, shap_riverside_idx) %>%
  shapviz::sv_importance("beeswarm") +
  theme_minimal()
```

```{r, results='asis', eval=shap_exists}
cat("## Calumet Beeswarm")
```

```{r, eval=shap_exists}
shap_calumet_idx <- which(
  assessment_card_filtered$meta_township_code == ccao::town_convert("Calumet")
)
create_shapviz(shap_df_filtered, assessment_card_filtered, shap_calumet_idx) %>%
  shapviz::sv_importance("beeswarm") +
  theme_minimal()
```

```{r, results='asis', eval=shap_exists}
cat("## Thornton Beeswarm")
```

```{r, eval=shap_exists}
shap_thornton_idx <- which(
  assessment_card_filtered$meta_township_code == ccao::town_convert("Thornton")
)
create_shapviz(shap_df_filtered, assessment_card_filtered, shap_thornton_idx) %>%
  shapviz::sv_importance("beeswarm") +
  theme_minimal()
```

```{r, results='asis', eval=shap_exists}
cat(":::")
```
