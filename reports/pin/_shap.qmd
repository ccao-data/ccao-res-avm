{{< include ../_setup.qmd >}}

## SHAP Values

```{r _pin_shap_data_manipulation}
shap_predictors <- unlist(metadata$model_predictor_all_name)

shap_df_filtered <- shap_df %>%
  mutate(meta_triad = ccao::town_get_triad(as.character(township_code))) %>%
  arrange(meta_pin, meta_card_num)

assessment_card_filtered <- assessment_card %>%
  mutate(meta_triad = ccao::town_get_triad(as.character(township_code))) %>%
  arrange(meta_pin, meta_card_num)

shap_townships_to_iterate <- shap_df_filtered %>%
  distinct(township_code) %>%
  pull() %>%
  as.character()

shap_idx_full_model <- which(
  assessment_card_filtered$meta_township_code %in% shap_townships_to_iterate
)

shap_df_filtered <- shap_df_filtered %>%
  filter(meta_pin %in% target_pin) %>%
  arrange(meta_pin)

assessment_card_filtered <- assessment_card_filtered %>%
  filter(meta_pin %in% target_pin) %>%
  arrange(meta_pin)
```

### Force Plot by Card

```{r _pin_shap_viz_function}
create_shap_viz <- function(row_idx) {
  shapviz_object <- shapviz(
    object = shap_df_filtered %>%
      select(all_of(shap_predictors)) %>%
      slice(row_idx) %>%
      as.matrix(),
    X = assessment_card_filtered %>%
      select(all_of(shap_predictors)) %>%
      slice(row_idx),
    baseline = shap_df_filtered$pred_card_shap_baseline_fmv[1]
  ) %>%
    sv_waterfall(max_display = 15L)

  return(shapviz_object)
}

shap_num_rows <- nrow(shap_df_filtered)
```

::: {.panel-tabset}

```{r _pin_shap_results, results = 'asis'}
results <- vector("list", length = shap_num_rows)

for (i in seq_len(shap_num_rows)) {
  cat("##", "Card ", shap_df_filtered$meta_card_num[i], "\n")

  results[[i]] <- create_shap_viz(i) +
    labs(x = "Mean Abs. SHAP Value") +
    scale_x_continuous(
      labels = scales::dollar,
      expand = expansion(mult = c(0.05, 0.1))
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1),
      axis.title.x = element_text(margin = margin(t = 10))
    )

  print(results[[i]])

  cat("\n\n")
}
```

:::

### Aggregate Categories by Card

```{r _pin_shap_table, results = "asis", eval=metadata$shap_enable}
shap_df_filtered %>%
  filter(meta_pin %in% target_pin) %>%
  mutate(PIN = as.numeric(meta_pin)) %>%
  mutate(Card = as.numeric(meta_card_num)) %>%
  select_if(is.numeric) %>%
  select(-any_of("township_code")) %>%
  mutate(
    `Chars.` = rowSums(select(., starts_with("char_")), na.rm = TRUE),
    ACS5 = rowSums(select(., starts_with("acs5_")), na.rm = TRUE),
    Time = rowSums(select(., starts_with("time_")), na.rm = TRUE),
    Location = rowSums(select(
      .,
      starts_with("loc_"),
      -any_of(c(
        "loc_school_elementary_district_geoid",
        "loc_school_secondary_district_geoid"
      )),
      any_of(c("ccao_is_corner_lot", "other_tax_bill_rate"))
    ), na.rm = TRUE),
    Proximity = rowSums(select(., starts_with("prox_")), na.rm = TRUE),
    School = rowSums(select(., any_of(c(
      "other_school_district_elementary_avg_rating",
      "other_school_district_secondary_avg_rating",
      "loc_school_elementary_district_geoid",
      "loc_school_secondary_district_geoid"
    ))), na.rm = TRUE),
    Meta = rowSums(select(., starts_with("meta_")), na.rm = TRUE),
    Other = rowSums(select(
      .,
      -starts_with("char_"),
      -starts_with("acs5_"),
      -starts_with("time_"),
      -starts_with("loc_"),
      -starts_with("prox_"),
      -starts_with("meta_"),
      -any_of(c(
        "other_school_district_elementary_avg_rating",
        "other_school_district_secondary_avg_rating",
        "ccao_is_corner_lot",
        "other_tax_bill_rate"
      )),
      -any_of(c("PIN", "Card", "pred_card_shap_baseline_fmv"))
    ), na.rm = TRUE)
  ) %>%
  arrange(PIN, Card) %>%
  select(
    Card,
    Baseline = pred_card_shap_baseline_fmv, `Chars.`, ACS5, Time,
    Location, Proximity, School, Other, Meta
  ) %>%
  mutate(across(2:ncol(.), ~ scales::dollar(.x, accuracy = 1))) %>%
  kable(align = "lrrrrrrrrr") %>%
  kable_styling(
    "striped",
    position = "left",
    fixed_thead = TRUE
  )
```

