---
title: "Distributions `r params$run_id`"
execute:
  echo: false
  warning: false
format:
  html:
    embed-resources: true
    toc: true
    toc_float: true
    fig-align: center
    fontsize: 12pt
editor: source
params:
  run_id: 2023-03-14-clever-damani
  year: '2023'
---

```{r}
library(knitr)
source("Setup_File.R")
```

## Standardized mean differences
```{r outlier_map, message=FALSE}

# This should be replaced with 
outliers <- read_parquet("~/Separate Quarto doc into file per topic #74/reports/Separate Quarto doc into file per topic #74/output/test_card/model_test_card.parquet") 


# that would be trimmed according to CCAO SOPs using the is_outlier() function
outlier_dist <- outliers %>%
  group_by(meta_township_code) %>%
  mutate(ratio = meta_sale_price / pred_card_initial_fmv) 

# Find 1st and 99th percentile for trimmed and untrimmed ratios
quantiles <- outlier_dist %>%
  summarize(q01 = quantile(ratio, 0.01), q99 = quantile(ratio, 0.99))

outlier_dist <- outlier_dist %>%
  mutate(
    quantile_category = case_when(
      ratio < quantiles$q01 ~ "< 1st Percentile",
      ratio > quantiles$q99 ~ "> 99th Percentile",
      TRUE ~ "1st-99th Percentile"
    )
  )

```

<br>

## Spatial Distribution of Outliers

```{r outlier_map, message=FALSE}
# Create a township level map showing the location of individual outliers within
# the 1st and 99th percentile from the histogram above

outlier_dist %>%
  filter(meta_triad_code == 3) %>%
  filter(quantile_category != "1st-99th Percentile") %>%
  left_join(training_data, by = "meta_pin") %>%
  filter(!is.na(loc_longitude) & !is.na(loc_latitude)) %>%
  st_as_sf(coords = c("loc_longitude", "loc_latitude"), crs = 4326) %>%
  ggplot() +
    geom_sf(data = town_shp %>% 
              filter(triad_name == "South")) +
    geom_sf(aes(geometry = geometry, color = quantile_category)) +
    guides(color = guide_legend(title = "Quantile Category")) +
    theme_void() +
    theme(
      strip.text = element_text(size = 12)
    )


```
